AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Backend infrastructure for the Resume-Boost AI application.

  '
Globals:
  Function:
    Environment:
      Variables:
        DYNAMO_TABLE_NAME:
          Ref: ResumeAnalysisJobsTable
  HttpApi:
    CorsConfiguration:
      AllowOrigins:
      - '*'
      AllowHeaders:
      - Content-Type
      AllowMethods:
      - GET
      - POST
      - OPTIONS
Parameters:
  S3BucketName:
    Type: String
    Default: resume-boost-uploads-unique-name-12345
Resources:
  ResumeUploadsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Ref: S3BucketName
      CorsConfiguration:
        CorsRules:
        - AllowedHeaders:
          - '*'
          AllowedMethods:
          - PUT
          - POST
          - GET
          - HEAD
          AllowedOrigins:
          - '*'
  ResumeAnalysisJobsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ResumeAnalysisJobs
      AttributeDefinitions:
      - AttributeName: jobId
        AttributeType: S
      KeySchema:
      - AttributeName: jobId
        KeyType: HASH
      BillingMode: PAY_PER_REQUEST
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: ResumeBoostLambdaPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
          - Effect: Allow
            Action:
            - s3:GetObject
            - s3:PutObject
            Resource:
              Fn::Sub: arn:aws:s3:::${S3BucketName}/*
          - Effect: Allow
            Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            Resource:
              Fn::GetAtt:
              - ResumeAnalysisJobsTable
              - Arn
          - Effect: Allow
            Action:
            - bedrock:InvokeModel
            Resource:
              Fn::Sub: arn:aws:bedrock:${AWS::Region}::foundation-model/anthropic.claude-3-sonnet-20240229-v1:0
  ResumeAnalysisFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: resume-analysis-service
      CodeUri: ResumeAnalysisFunction
      Handler: lambda_function.lambda_handler
      Runtime: python3.11
      Timeout: 300
      MemorySize: 512
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
      Events:
        S3UploadTrigger:
          Type: S3
          Properties:
            Bucket:
              Ref: ResumeUploadsBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                - Name: suffix
                  Value: .pdf
    Metadata:
      SamResourceId: ResumeAnalysisFunction
  GetUploadUrlFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: get-upload-url-service
      CodeUri: GetUploadUrlFunction
      Handler: lambda_function.lambda_handler
      Runtime: python3.11
      Timeout: 30
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
      Environment:
        Variables:
          S3_BUCKET_NAME:
            Ref: ResumeUploadsBucket
          DYNAMO_TABLE_NAME:
            Ref: ResumeAnalysisJobsTable
      Events:
        ApiEndpoint:
          Type: HttpApi
          Properties:
            Path: /upload-url
            Method: post
    Metadata:
      SamResourceId: GetUploadUrlFunction
  GetResultsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: get-results-service
      CodeUri: GetResultsFunction
      Handler: lambda_function.lambda_handler
      Runtime: python3.11
      Timeout: 30
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
      Events:
        ApiEndpoint:
          Type: HttpApi
          Properties:
            Path: /results/{jobId}
            Method: get
    Metadata:
      SamResourceId: GetResultsFunction
Outputs:
  ResumeBoostApiEndpoint:
    Description: API Gateway endpoint URL for the Resume-Boost AI application
    Value:
      Fn::Sub: https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/
  ResumeUploadsBucketName:
    Description: Name of the S3 bucket for resume uploads
    Value:
      Ref: ResumeUploadsBucket
